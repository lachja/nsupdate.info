# Generated by Django 2.2.9 on 2019-12-30 16:29

import django.core.validators
from django.db import migrations, models
import nsupdate.main.models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0011_auto_20170526_2113'),
    ]

    operations = [
        migrations.AlterField(
            model_name='domain',
            name='comment',
            field=models.CharField(blank=True, default='', help_text='Some arbitrary comment about your domain. If your domain is public, the comment will be also publicly shown.', max_length=255, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='name',
            field=models.CharField(help_text='Name of the zone where dynamic hosts may get added', max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid domain name', regex='([a-zA-Z0-9-_]+\\.)+[a-zA-Z0-9-_]{2,}')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='nameserver_update_algorithm',
            field=models.CharField(choices=[('HMAC_SHA512', 'HMAC_SHA512'), ('HMAC_SHA384', 'HMAC_SHA384'), ('HMAC_SHA256', 'HMAC_SHA256'), ('HMAC_SHA224', 'HMAC_SHA224'), ('HMAC_SHA1', 'HMAC_SHA1'), ('HMAC_MD5', 'HMAC_MD5')], default='HMAC_SHA512', help_text='HMAC_SHA512 is fine for bind9 (you can change this later, if needed)', max_length=16, verbose_name='nameserver update algorithm'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='nameserver_update_secret',
            field=models.CharField(default='', help_text='Shared secret that allows updating this zone (base64 encoded)', max_length=88, verbose_name='nameserver update secret'),
        ),
        migrations.AlterField(
            model_name='host',
            name='api_auth_result_msg',
            field=models.CharField(blank=True, default='', help_text='Latest result message relating to api authentication', max_length=255, null=True, verbose_name='api auth result msg'),
        ),
        migrations.AlterField(
            model_name='host',
            name='client_result_msg',
            field=models.CharField(blank=True, default='', help_text='Latest result message relating to the client', max_length=255, null=True, verbose_name='client result msg'),
        ),
        migrations.AlterField(
            model_name='host',
            name='comment',
            field=models.CharField(blank=True, default='', help_text='Some arbitrary comment about your host, e.g  who / what / where this host is', max_length=255, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='host',
            name='name',
            field=models.CharField(help_text='The name of your host.', max_length=255, validators=[django.core.validators.RegexValidator(message='Invalid host name: only "a-z", "0-9" and "-" is allowed', regex='^(([a-z0-9][a-z0-9\\-]*[a-z0-9])|[a-z0-9])$'), nsupdate.main.models.host_blacklist_validator], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='host',
            name='server_result_msg',
            field=models.CharField(blank=True, default='', help_text='Latest result message relating to the server', max_length=255, null=True, verbose_name='server result msg'),
        ),
        migrations.AlterField(
            model_name='relatedhost',
            name='comment',
            field=models.CharField(blank=True, default='', help_text='Some arbitrary comment about your host, e.g  who / what / where this host is', max_length=255, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='relatedhost',
            name='interface_id_ipv4',
            field=models.CharField(blank=True, default='', help_text='The IPv4 interface ID of this host. Use IPv4 notation. Empty = do not set record.', max_length=16, null=True, verbose_name='interface ID IPv4'),
        ),
        migrations.AlterField(
            model_name='relatedhost',
            name='interface_id_ipv6',
            field=models.CharField(blank=True, default='', help_text='The IPv6 interface ID of this host. Use IPv6 notation. Empty = do not set record.', max_length=40, null=True, verbose_name='interface ID IPv6'),
        ),
        migrations.AlterField(
            model_name='relatedhost',
            name='name',
            field=models.CharField(help_text='The name of a host in same network as your main host.', max_length=255, validators=[django.core.validators.RegexValidator(message='Invalid host name: only "a-z", "0-9" and "-" is allowed', regex='^(([a-z0-9][a-z0-9\\-]*[a-z0-9])|[a-z0-9])$')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='serviceupdater',
            name='comment',
            field=models.CharField(blank=True, default='', help_text='Some arbitrary comment about the service', max_length=255, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='serviceupdater',
            name='path',
            field=models.CharField(default='/nic/update', help_text='Update Server URL path of this service', max_length=255, verbose_name='path'),
        ),
        migrations.AlterField(
            model_name='serviceupdaterhostconfig',
            name='comment',
            field=models.CharField(blank=True, default='', help_text='Some arbitrary comment about your host on that service', max_length=255, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='serviceupdaterhostconfig',
            name='hostname',
            field=models.CharField(blank=True, default='', help_text='The hostname for that service (used in query string)', max_length=255, null=True, verbose_name='hostname'),
        ),
    ]
